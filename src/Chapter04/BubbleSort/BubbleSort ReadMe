※ 버블정렬

1. 개요
    - 인접한 데이터들끼리 비교하고, swap 연산을 통해서 정렬하는 알고리즘.
    - 다른 정렬 알고리즘에 비해 시간이 다소 오래걸리는 단점이 있음.
    - 상대적으로 로직이 단순하고 구현이 쉽다는 장점이 있음.

2. 버블정렬의 핵심이론
    - 인접한 데이터의 크기를 비교해 정렬하는 방법
    - 시간복잡도는 O(n^2) 으로, 다른 정렬 알고리즘보다 다소 오래걸리는 편

3. 예시
- 1 loop
    배열 [10, 6, 7, 1, 4]
    1) 10과 6을 비교 -> 왼쪽이 더 크니 swap
    배열 [6, 10, 7, 1, 4]
    2) 10과 7을 비교 -> 왼쪽이 더 크니 swap
    배열 [6, 7, 10, 1, 4]
    3) 10과 1을 비교 -> 왼쪽이 더 크니 swap
    배열 [6, 7, 1, 10, 4]
    4) 10과 4를 비교 -> 왼쪽이 더 크니 swap
    배열 [6, 7, 1, 4, 10]

- 2 loop
    배열 [6, 7, 1, 4, 10]
    1) 6과 7을 비교 -> 오른쪽이 더 크니 pass
    배열 [6, 7, 1, 4, 10]
    2) 7과 1을 비교 -> 왼쪽이 더 크니 swap
    배열 [6, 1, 7, 4, 10]
    3) 7과 4를 비교 -> 왼쪽이 더 크니 swap
    배열 [6, 1, 4, 7, 10]
    4) 7과 10을 비교 -> 오른쪽이 더 크니 pass
    배열 [6, 1, 4, 7, 10]

    ...

    계속 반복


4. 시간복잡도
    - loop 한번을 도는데 N만큼의 연산을 수행함.
    - 그걸 N번 만큼 반복하니까 O(n^2)이 됨.


5. 특징
    - loop수는 숫자(배열 사이즈)수의 -1 만큼 수행함.
    - 특정 loop의 전체 영역에서 swap이 한번도 일어나지 않았다면, 그 뒤로는 다 이미 정렬이 되었다는 의미이므로
      프로세스 종료해도됨.
