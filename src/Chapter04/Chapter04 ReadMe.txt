구간합 (Prefix Sum)

1. 코딩테스트 문제에서 자주 사용하는 핵심개념임

2. 구간합이란
    - 합 배열을 이용하여 시간복잡도를 줄이기 위해 사용하는 특수한 목적의 알고리즘.
    - 기존 일정범위 합을 구하기 위해선 시간복잡도가 O(N)만큼 걸리는데, 구간합을 미리 구해놓으면 O(1)로 줄어든다.
    - 코딩테스트에서 사용빈도가 높음!
    - 구간합을 구하기 위해선 합배열을 구해야함.

3. 합배열
    - A[0] 부터 A[i] 까지 합.
    - 배열 A     : [15, 13, 10, 7, 3, 12]
      합 배열 S  : [15, 28, 38, 45, 48, 60]


★ 배열 A     : [15, 13, 10, 7, 3, 12]
   합 배열 S  : [0, 15, 28, 38, 45, 48, 60]


4. 합배열 만드는 법

    - 공식
        1. 합배열 S의 첫번째 값은 0으로 초기화
        2. 나머지는 S[i+1] = S[i] + A[i] 공식을 사용하면 됨.
        ex) S[1] = S[0] + A[1] 이다.
            따라서 S[1] = 15 + 13 = 28이 된다.


5. 구간합 빠르게 구하기
    - 공식
        1. A 배열에서 i 부터 j 까지 합
        2. 합배열 S 구하기
        3. A[i] + ... + A[j] = S[j] - S[i-1]  // i에서 j 까지 구간합

        ex) A배열에서 A[3] 부터 A[5]까지 합 --> [7, 3, 12] --> 합 : 22
            합배열 S 구하기
            A[3] + ... + A[5] = S[5] - S[2] = 60 - 38 = 22


6. 구간합 정리
    - A배열이 바뀌지 않는 한, 합배열의 값은 다시 구할 필요가 없다.
    - 만약 A배열이 바뀌는 경우에는 '인덱스 트리(세그먼트 트리)' 라는 알고리즘을 사용하게 됨.