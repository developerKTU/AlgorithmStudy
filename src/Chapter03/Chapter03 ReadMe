배열과 리스트

1. 배열
    - 메모리에 연속적인 공간에 값이 채워져있는 자료구조
    - 인덱스를 통해서 바로 값에 접근 가능
    - 새로운 값을 삽입하거나 특정 인덱스에 있는 값을 삭제하기 어렵다
        -> 해당 인덱스에 근접해있는 인덱스들을 이동시켜야함.
    - 배열의 크기는 선언때 지정할 수 있으며, 선언 이후 배열의 크기는 수정이 불가하다.
    - 구조가 간단하므로 코딩테스트에서 가장 많이 쓰인다.

2. 리스트
    - 노드라는 것을 포인터로 묶어놓은 자료구조 (포인터로 다음 값을 가리키고 있음.)
    - 인덱스가 없으므로, 접근하려면 Head 포인터 순서대로 접근해야함 -> 접근 속도가 느리다.
    - 포인터로 연결되어 있으므로, 삽입 삭제 연산 속도가 빠르다.
    - 선언 시, 크기를 별도로 지정하지 않아도 됨. 크기가 정해져 있지않아 크기가 변동되기 쉬운 데이터구조에 용이.
    - 포인터를 저장할 공간이 필요하므로, 배열보다 구조가 복잡하다.

3. 실제 코딩테스트에서 실제 리스트를 구현하는 경우는 굉장히 드물다. 자바는 ArrayList , LinkedList를 기본제공해주기 때문에 리스트 문제는
   리스트의 기본동작 개념만 알고 넘어가면 된다.

4. 코딩테스트에서 두 개 자료구조를 선택하는 방법
    - 배열은 간단하고, 배열 크기가 고정되어 있는 경우, 데이터가 접근하는 경우가 많을 경우 배열이 용이
    - 크기가 변하는 데이터를 다룰때, 데이터의 삽입, 삭제가 많은 경우에 arrayList나 LinkedList 용이