1. 디버깅이란?
    - 코드의 논리 오류를 잡아내는 것
2. 왜 디버깅이 중요한가?
    - 코딩테스트를 할때 디버깅으로 잡아낼 수 있는 오류가 꽤 있다.
3. 디버깅 하는 법
    - 중단점 잡기
    - 디버깅 기능 수행
    - 코드를 한 줄씩 수행 가능하며 다음 중단점까지 수행가능하다. 이 과정에서 추적할 변숫값도 지정이 가능하다.
    - 변숫값 이외에도 수식을 입력해 논리 오류를 파악할 수 있다.
    -
4. 디버깅 창 띄우기
    - 상단 Window > Show View > Variables 와 Expressions 창(여기서 수식 입력 가능!)을 추가해서 디버깅할 수 있음 (이클립스 기준)

5. 코딩테스트를 진행하며 실수하기 쉬운 4가지 (디버깅으로 실수파악 가능)
    - 변수 초기회 오류 (적절하지 않은 위치에서 변수를 초기화)
    - 반복문에서 인덱스 범위 지정 오류 (의도하지 않은 인덱스에서 코드가 수행되는 경우 등)
    - 잘못된 변수 사용 오류
    - (중요) 자료형 범위 오류 -> Tip : 아는 문제였고 로직을 잘 짰는데 답이 음수가 나올 수 없는데 답이 음수가 나온 경우는 무조건 자료형을 바꿔보기!
        -> 대표적인 경우가 팩토리얼 문제, 경우의 수 문제, 순열 문제, DP 문제 -> 수가 굉장히 커지는 문제들임. 이런 문제들은 long 자료형으로
           바꾸면 해결되거나 문제에서 조건이 주어짐. ( 정답을 ~로 나눈 나머지 값으로 출력하시오. )